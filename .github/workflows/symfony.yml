name: Symfony

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

permissions:
    contents: read

jobs:
    security:
        name: Security
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            # Docs: https://github.com/shivammathur/setup-php
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: mbstring, xml, ctype, iconv, intl, mysql
                  coverage: none
                  tools: symfony

            - name: Check security vulnerabilities.
              run: make security

    linter:
        name: Linter
        runs-on: ubuntu-latest
        needs: security
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            # Docs: https://github.com/shivammathur/setup-php
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: mbstring, xml, ctype, iconv, intl, mysql
                  coverage: none
                  tools: symfony

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader

            - name: Lint yaml files
              run: make lint-yaml

            - name: Lint XLIFF translations
              run: make lint-xliff

            - name: Lint Parameters and Services
              run: make lint-container

            - name: Lint Doctrine mapping
              run: make lint-doctrine

            - name: Lint Composer config
              run: make lint-composer

            - name: Lint Twig templates files
              run: make lint-twig

            - name: Lint scss files
              run: make lint-style

            - name: lint javascript files
              run: make lint-js

    standards:
        name: Coding standards
        runs-on: ubuntu-latest
        needs: security
        env:
            CI: 1
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            # Docs: https://github.com/shivammathur/setup-php
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  tools: cs2pr, symfony
                  extensions: mbstring, xml, ctype, iconv, intl, mysql
                  coverage: none

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader

            - name: Run php_codesniffer
              run: make php-cs

            - name: Show php_codesniffer results in PR
              run: cs2pr ./phpcs-report.xml

            - name: Run PHP Mess Detector
              run: make php-mess

            - name: Show PHP Mess Detector results in PR
              run: cs2pr ./phpmd-report.xml

            - name: Run PHPStan
              run: make php-stan

            - name: Run PHP Insights
              run: make php-insights

    test:
        name: Test
        runs-on: ubuntu-latest
        needs: [linter, standards]

        # Docs: https://docs.github.com/en/actions/using-containerized-services
        services:
            mysql:
                image: mysql:latest
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: false
                    MYSQL_ROOT_PASSWORD: symfony
                    MYSQL_DATABASE: symfony
                ports:
                    - 3306/tcp
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            # Docs: https://github.com/shivammathur/setup-php
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  tools: cs2pr, symfony
                  extensions: mbstring, xml, ctype, iconv, intl, mysql
                  coverage: pcov

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader

            - name: Run Migration
              run: |
                  php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
              env:
                  DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

            - name: Run tests
              run: php bin/phpunit --coverage-text
